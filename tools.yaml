tools:
  - name: run_command
    description: "Execute shell commands with proper error handling."
    schema:
      type: object
      properties:
        reasoning:
          type: string
          description: "Why this command helps achieve the current goal"
        command:
          type: string
          description: "Command to execute"
        run_in_directory:
          type: string
          description: "Directory to execute the command in"
        timeout:
          type: integer
          description: "Timeout in seconds"
          default: 30
      required: ["reasoning", "command"]
    category: command_execution
  - name: read_file
    description: "Read file contents with pagination"
    schema:
      type: object
      properties:
        reasoning:
          type: string
          description: "Why reading this file helps achieve the current goal"
        file_path:
          type: string
          description: "Path to the file to read"
        start_line:
          type: integer
          description: "Line number to start reading from (1-based)"
          default: 1
        max_lines:
          type: integer
          description: "Maximum number of lines to read"
          default: 200
      required: ["reasoning", "file_path"]
    category: file_operations
  - name: semantic_search
    description: "Performs a semantic search over the codebase to find relevant code snippets based on meaning, not just keywords."
    schema:
      type: object
      properties:
        reasoning:
          type: string
          description: "Why this search helps achieve the current goal"
        query:
          type: string
          description: "Natural language query to search for relevant code"
        top_k:
          type: integer
          description: "Number of top results to return"
          default: 5
      required: ["reasoning", "query"]
    category: search
  - name: ripgrep
    description: "Search for text patterns in files. MUST specify search directory, file extension, and max results to prevent excessive token usage."
    schema:
      type: object
      properties:
        reasoning:
          type: string
          description: "Why this search pattern helps achieve the current goal"
        pattern:
          type: string
          description: "Text pattern to search for"
        search_directory:
          type: string
          description: "Directory to search in (REQUIRED to limit search scope)"
        extension:
          type: string
          description: "File extension to search (e.g., 'py', 'js', 'txt')"
        max_count:
          type: integer
          description: "Maximum number of matches to return (Maximum 50)"
          minimum: 1
          maximum: 50
      required: ["reasoning", "pattern", "search_directory", "extension", "max_count"]
    category: search
  - name: write_to_file
    description: "Create or overwrite a file with specified content"
    schema:
      type: object
      properties:
        reasoning:
          type: string
          description: "Why creating/modifying this file helps achieve the current goal"
        file_path:
          type: string
          description: "Path to the file to create or modify"
        content:
          type: string
          description: "Content to write to the file"
      required: ["reasoning", "file_path", "content"]
    category: file_operations
  - name: install_app
    description: "Install a program on the current system non-interactively with sudo"
    schema:
      type: object
      properties:
        reasoning:
          type: string
          description: "Why installing these packages helps achieve the current goal"
        packages:
          description: "Package name(s) to install. Can be a single string or an array of strings"
          anyOf:
            - type: string
            - type: array
              items:
                type: string
      required: ["reasoning", "packages"]
    category: system_management
  - name: file_search
    description: "Fast file and directory search using glob patterns"
    schema:
      type: object
      properties:
        reasoning:
          type: string
          description: "Why searching for these files helps achieve the current goal"
        pattern:
          type: string
          description: "Glob pattern to search for (e.g., '*.py', 'test_*.js', 'ai-coder-v3')"
        search_dir:
          type: string
          description: "Directory to search in (defaults to current directory)"
        max_results:
          type: integer
          description: "Maximum number of results to return"
          default: 100
      required: ["reasoning", "pattern"]
    category: search
  - name: restart_shell
    description: "Restart the AI Shell process to reload new tools and configurations"
    schema:
      type: object
      properties:
        reasoning:
          type: string
          description: "Why restarting the shell is needed (e.g., after adding new tools)"
        backup_current:
          type: boolean
          description: "Whether to create a backup before restarting"
          default: true
        preserve_session:
          type: boolean
          description: "Whether to try preserving session context after restart"
          default: false
      required: ["reasoning"]
    category: system_management
  - name: vpn_connection
    description: "Connect to OpenVPN using config file"
    schema:
      type: object
      properties:
        reasoning:
          type: string
          description: "Why connecting to VPN helps achieve the current goal"
        config_file:
          type: string
          description: "Path to .ovpn config file"
      required: ["reasoning", "config_file"]
    category: network
  - name: google_search
    description: "Search Google using stealth browser automation to avoid detection. Returns structured JSON with order keys."
    schema:
      type: object
      properties:
        reasoning:
          type: string
          description: "Why searching Google helps achieve the current goal"
        query:
          type: string
          description: "Search query to execute on Google"
        num_results:
          type: integer
          description: "Number of results to return"
          default: 20
      required: ["reasoning", "query"]
    category: search
  - name: fetch_webpage
    description: "Fetch webpage content using stealth browser automation with cookie handling"
    schema:
      type: object
      properties:
        reasoning:
          type: string
          description: "Why fetching this webpage helps achieve the current goal"
        url:
          type: string
          description: "URL of the webpage to fetch"
        output_file:
          type: string
          description: "Optional file path to save the HTML content"
        headless:
          type: boolean
          description: "Whether to run browser in headless mode"
          default: false
      required: ["reasoning", "url"]
    category: web
